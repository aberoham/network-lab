#!/bin/sh

cd "$(dirname "$(readlink -f "$0")")"
. ../common/lab-setup

spawn vm H1
spawn vm H2
spawn vm H3

run

ip link add type veth # veth0 + veth1
ip link add type veth # veth1 + veth2
ip link set up dev veth0
ip link set up dev veth1 # link-status paired with veth0
ip link set up dev veth2
ip link set up dev veth3 # link-status paired with veth2

# First available path
ip -4 addr add 203.0.113.${uts#H}/24 dev veth0
ip -6 addr add 2001:db8:1::${uts#H}/64 dev veth0

# Second available path
ip -4 addr add 192.0.2.${uts#H}/24 dev veth2
ip -6 addr add 2001:db8:2::${uts#H}/64 dev veth2

# More specific route through first path
ip -4 route add 198.51.100.0/25 via 203.0.113.254 # via veth0
ip -6 route add 2001:db8:3::/56 via 2001:db8:1::ff # via veth0

# Less specific route through second path
ip -4 route add 198.51.100.0/24 via 192.0.2.254 # via veth2
ip -6 route add 2001:db8:3::/48 via 2001:db8:2::ff # via veth2

# H1: enable on "all"
# H2: enable on "veth0"
for v in ipv4 ipv6; do
    case $uts in
        H1) sysctl -qw net.${v}.conf.all.ignore_routes_with_linkdown=1 ;;
        H2) sysctl -qw net.${v}.conf.veth0.ignore_routes_with_linkdown=1 ;;
    esac
done

# Check what kind of notification we receive. In fact, when a nexthop
# goes down, we don't receive a route change notification
# (independantly of asking if down routes should be ignored or not).
ip -color monitor route &

set -xe
# When veth0 is up, best route is through veth0
ip -o route get 198.51.100.1 | grep -Fw veth0
ip -o route get 2001:db8:3::1 | grep -Fw veth0

# When veth0 is down, best route should be through veth2 on H1/H2, but on veth0 on H2
ip link set down dev veth1 # down veth0
sleep 1
ip route show
[ $uts != H3 ] || ip -o route get 198.51.100.1 | grep -Fw veth0
[ $uts != H3 ] || ip -o route get 2001:db8:3::1 | grep -Fw veth0
[ $uts = H3 ] || ip -o route get 198.51.100.1 | grep -Fw veth2
[ $uts = H3 ] || ip -o route get 2001:db8:3::1 | grep -Fw veth2

set +xe
